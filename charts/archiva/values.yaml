image:
  # image.repository -- image repository
  repository: xetusoss/archiva
  # image.tag -- image tag (chart's appVersion value will be used if not set)
  tag: ""
  # image.pullPolicy -- image pull policy
  pullPolicy: IfNotPresent

# imagePullSecrets -- image pull secret for private images
imagePullSecrets: []
# nameOverride -- override name of the chart
nameOverride: ""
# fullnameOverride -- full name of the chart.
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: false
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  name:

# podSecurityContext -- specifies security settings for a pod
podSecurityContext: {}
# fsGroup: 2000

# securityContext -- specifies security settings for a container
securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  # service.type -- service type
  type: ClusterIP
  # service.port -- service port
  port: 80

ingress:
  # ingress.enabled -- enables Ingress for archiva
  enabled: false
  # ingress.annotations -- ingress annotations
  annotations: {}
  # kubernetes.io/ingress.class: archiva
  # kubernetes.io/tls-acme: "true"
  # ingress.hosts -- ingress accepted hostnames
  hosts: []
  #  - host: chart-example.local
  #    paths: []
  # ingress.tls -- ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# resources -- custom resource configuration
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# nodeSelector -- node for scheduler pod assignment
nodeSelector: {}

# tolerations -- tolerations for scheduler pod assignment
tolerations: []

# affinity -- affinity for scheduler pod assignment
affinity: {}

# volumeMounts -- volume mounts
volumeMounts:
  - name: data
    mountPath: /archiva-data

# volumes -- volumes
volumes:
  - name: data
    emptyDir: {}

livenessProbe:
  exec:
    # livenessProbe.exec.command -- command for liveness probe
    command:
      - /healthcheck.sh

readinessProbe:
  exec:
    # readinessProbe.exec.command -- command for readiness probe
    command:
      - /healthcheck.sh

# env -- environment variables for the deployment
env:
  - name: DB_TYPE
    value: derby

# archivaConf -- archiva config to provision inside of the container
archivaConf: |-
  <configuration>
      <remoteRepositories>
          <remoteRepository>
              <url>https://repo.maven.apache.org/maven2</url>
              <downloadRemoteIndex>false</downloadRemoteIndex>
              <downloadRemoteIndexOnStartup>false</downloadRemoteIndexOnStartup>
              <id>central</id>
              <name>Central Repository</name>
          </remoteRepository>
          <remoteRepository>
              <url>https://plugins.gradle.org/m2</url>
              <downloadRemoteIndex>false</downloadRemoteIndex>
              <downloadRemoteIndexOnStartup>false</downloadRemoteIndexOnStartup>
              <id>gradle</id>
              <name>Gradle Plugins Repository</name>
          </remoteRepository>
      </remoteRepositories>
      <proxyConnectors>
          <proxyConnector>
              <order>1</order>
              <sourceRepoId>internal</sourceRepoId>
              <targetRepoId>central</targetRepoId>
              <proxyId/>
              <whiteListPatterns>
                  <whiteListPattern>**/*</whiteListPattern>
              </whiteListPatterns>
              <policies>
                  <releases>once</releases>
                  <checksum>fix</checksum>
                  <snapshots>never</snapshots>
                  <cache-failures>yes</cache-failures>
              </policies>
              <disabled>false</disabled>
          </proxyConnector>
          <proxyConnector>
              <order>2</order>
              <sourceRepoId>internal</sourceRepoId>
              <targetRepoId>gradle</targetRepoId>
              <proxyId/>
              <whiteListPatterns>
                  <whiteListPattern>**/*</whiteListPattern>
              </whiteListPatterns>
              <policies>
                  <releases>once</releases>
                  <checksum>fix</checksum>
                  <snapshots>never</snapshots>
                  <cache-failures>yes</cache-failures>
              </policies>
              <disabled>false</disabled>
          </proxyConnector>
      </proxyConnectors>
  </configuration>
